@page "/counter"

@using Microsoft.AspNetCore.ProtectedBrowserStorage

@inject ProtectedSessionStorage ProtectedSessionStore

<h1>Counter</h1>

@if (!currentCount.HasValue)
{
    <p>Loading ...</p>
}
else { 
    <p>Current count: @currentCount</p>
}

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int? currentCount = 0;
    private bool isConnected = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            // When execution reaches this point, the first *interactive* render is complete.
            // The component has an active connection to the browser.
            isConnected = true;
            await LoadStateAsync();
            StateHasChanged();
        }
    }

    private async Task LoadStateAsync()
    {
        currentCount = await ProtectedSessionStore.GetAsync<int>("count");
    }

    private async Task IncrementCount()
    {
        currentCount++;
        await ProtectedSessionStore.SetAsync("count", currentCount);
    }
}
